export const validatorAbi = [
  { inputs: [], name: "NotImplemented", type: "error" },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "kernel", type: "address" },
      { indexed: true, internalType: "address", name: "oldOwner", type: "address" },
      { indexed: true, internalType: "address", name: "newOwner", type: "address" },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  { inputs: [], name: "activate", outputs: [], stateMutability: "nonpayable", type: "function" },
  { inputs: [], name: "deactivate", outputs: [], stateMutability: "nonpayable", type: "function" },
  { inputs: [{ internalType: "bytes", name: "", type: "bytes" }], name: "disable", outputs: [], stateMutability: "payable", type: "function" },
  { inputs: [{ internalType: "bytes", name: "_data", type: "bytes" }], name: "enable", outputs: [], stateMutability: "payable", type: "function" },
  { inputs: [{ internalType: "address", name: "_user", type: "address" }], name: "getStatus", outputs: [{ internalType: "enum IValidator.Status", name: "", type: "uint8" }], stateMutability: "view", type: "function" },
  {
    inputs: [
      { internalType: "address", name: "_caller", type: "address" },
      { internalType: "bytes", name: "", type: "bytes" },
    ],
    name: "validCaller",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "hash", type: "bytes32" },
      { internalType: "bytes", name: "signature", type: "bytes" },
    ],
    name: "validateSignature",
    outputs: [{ internalType: "ValidationData", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "sender", type: "address" },
          { internalType: "uint256", name: "nonce", type: "uint256" },
          { internalType: "bytes", name: "initCode", type: "bytes" },
          { internalType: "bytes", name: "callData", type: "bytes" },
          { internalType: "uint256", name: "callGasLimit", type: "uint256" },
          { internalType: "uint256", name: "verificationGasLimit", type: "uint256" },
          { internalType: "uint256", name: "preVerificationGas", type: "uint256" },
          { internalType: "uint256", name: "maxFeePerGas", type: "uint256" },
          { internalType: "uint256", name: "maxPriorityFeePerGas", type: "uint256" },
          { internalType: "bytes", name: "paymasterAndData", type: "bytes" },
          { internalType: "bytes", name: "signature", type: "bytes" },
        ],
        internalType: "struct UserOperation",
        name: "_userOp",
        type: "tuple",
      },
      { internalType: "bytes32", name: "_userOpHash", type: "bytes32" },
      { internalType: "uint256", name: "", type: "uint256" },
    ],
    name: "validateUserOp",
    outputs: [{ internalType: "ValidationData", name: "validationData", type: "uint256" }],
    stateMutability: "payable",
    type: "function",
  },
];
